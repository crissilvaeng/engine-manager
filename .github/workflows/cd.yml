name: Continuous Deployment

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - main

jobs:
  pre-deploy:
    name: ‚öôÔ∏è Configure
    runs-on: ubuntu-latest
    steps:
      - uses: appleboy/ssh-action@master
        continue-on-error: true
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            apps:create ${{ github.event.repository.name }}
      - name: Dokku docker-options
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker-options:add ${{ github.event.repository.name }} deploy "-v /var/run/docker.sock:/var/run/docker.sock"
      - name: Dokku config
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            config:set --no-restart ${{ github.event.repository.name }} NATS_URL=${{ secrets.NATS_SERVICE }}

  deploy:
    name: üöÄ Deploy
    needs: pre-deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: dokku/github-action@master
        with:
          git_remote_url: 'ssh://${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}/${{ github.event.repository.name }}'
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}

  post-deploy:
    name: üîê SSL
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            letsencrypt:auto-renew ${{ github.event.repository.name }}
      - uses: appleboy/ssh-action@master
        if: ${{ failure() }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            letsencrypt:enable ${{ github.event.repository.name }}
